// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


#include "ClawTop.h"
#include "../Subsystems/Claw.h"

float top = 20; //set top position

ClawTop::ClawTop() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void ClawTop::Initialize() {
	Robot::claw->pot1->GetValue(); //get pot value
}

// Called repeatedly when this Command is scheduled to run
void ClawTop::Execute() {
	float topat = Robot::claw->pot1->GetValue(); //assign variable to current position
	float topspd = 1-topat/top; //determine speed based on position relative to top setpoint
	if(topspd >.7){ //if the speed is faster than .7
		topspd = .7; //keep it at .7
	}
	if (topspd <.1 && topspd !=0) { //if the speed is lower than .1 but not 0
		topspd = .1; //keep it at .1
	}
	if(topat>20) { //if the position is over 20
		topspd = 0; //stop
	}
	RobotMap::clawlifter->Set(topspd); //set speed of the claw as determined above
}

// Make this return true when this Command no longer needs to run execute()
bool ClawTop::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void ClawTop::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ClawTop::Interrupted() {

}
