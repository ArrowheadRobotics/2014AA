// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.




#include "Drive.h"
#include "../Robotmap.h"
#include "../Commands/TankDrive.h"

Drive::Drive() : Subsystem("Drive") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	LeftDrive = RobotMap::driveLeftDrive; //simplify stuff
	RightDrive = RobotMap::driveRightDrive;
	driveTrain = RobotMap::drivedriveTrain;
	enLeft = RobotMap::driveenLeft;
	enRight = RobotMap::driveenRight;
	switchSol1 = RobotMap::driveswitchSol1;
	switchSol2 = RobotMap::driveswitchSol2;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Drive::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new TankDrive()); //drive when not doing anything else
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Drive::M_Drive(Joystick* joy1, Joystick* joy2){ //activate tankdrive
	//printf("function1");
	//driveTrain->TankDrive(joy1, joy2);
	//printf("function2");
	LeftDrive->Set(1*joy1->GetY()*joy1->GetY()*joy1->GetY());//*(joy1->GetY()/abs((joy1->GetY()*100000)/100000)));
	RightDrive->Set(-1*joy2->GetY()*joy2->GetY()*joy2->GetY());//*(joy2->GetY()/abs((joy2->GetY()*100000)/100000)));
	//   LeftDrive->Set((joy1->GetY()*joy1->GetY())*(joy1->GetY()/(abs(joy1->GetY()*100000)/100000)));
}
